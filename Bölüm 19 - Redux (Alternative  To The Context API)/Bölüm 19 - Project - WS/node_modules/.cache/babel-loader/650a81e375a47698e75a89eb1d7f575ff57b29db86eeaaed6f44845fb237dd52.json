{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n// const counterReducer = (state = initialState, action) => {\n//   switch (action.type) {\n//     case \"increment\":\n//       return {\n//         counter: state.counter + 1,\n//         showCounter: state.showCounter,\n//       };\n//     case \"increase\":\n//       return {\n//         counter: state.counter + action.amount,\n//         showCounter: state.showCounter,\n//       };\n//     case \"decrement\":\n//       return {\n//         counter: state.counter - 1,\n//         showCounter: state.showCounter,\n//       };\n//     case \"toggle\":\n//       return {\n//         showCounter: !state.showCounter,\n//         counter: state.counter,\n//       };\n//     default:\n//       return state;\n//   }\n//\n// if (action.type === \"increment\") {\n//   return {\n//     counter: state.counter + 1,\n//     showCounter: state.showCounter,\n//   };\n// }\n// if (action.type === \"increase\") {\n//   return {\n//     counter: state.counter + action.amount,\n//     showCounter: state.showCounter,\n//   };\n// }\n// if (action.type === \"decrement\") {\n//   return {\n//     counter: state.counter - 1,\n//     showCounter: state.showCounter,\n//   };\n// }\n//\n// if (action.type === \"toggle\") {\n//   return {\n//     showCounter: !state.showCounter,\n//     counter: state.counter,\n//   };\n// }\n// return state;\n// };\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer\n  }\n});\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","amount","toggleCounter","store","reducer"],"sources":["E:/Udemy React/Bölüm 19 - Redux (Alternative  To The Context API)/Bölüm 19 - Project - WS/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\nconst initialState = { counter: 0, showCounter: true };\n\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    },\n  },\n});\n\n// const counterReducer = (state = initialState, action) => {\n//   switch (action.type) {\n//     case \"increment\":\n//       return {\n//         counter: state.counter + 1,\n//         showCounter: state.showCounter,\n//       };\n//     case \"increase\":\n//       return {\n//         counter: state.counter + action.amount,\n//         showCounter: state.showCounter,\n//       };\n//     case \"decrement\":\n//       return {\n//         counter: state.counter - 1,\n//         showCounter: state.showCounter,\n//       };\n//     case \"toggle\":\n//       return {\n//         showCounter: !state.showCounter,\n//         counter: state.counter,\n//       };\n//     default:\n//       return state;\n//   }\n//\n// if (action.type === \"increment\") {\n//   return {\n//     counter: state.counter + 1,\n//     showCounter: state.showCounter,\n//   };\n// }\n// if (action.type === \"increase\") {\n//   return {\n//     counter: state.counter + action.amount,\n//     showCounter: state.showCounter,\n//   };\n// }\n// if (action.type === \"decrement\") {\n//   return {\n//     counter: state.counter - 1,\n//     showCounter: state.showCounter,\n//   };\n// }\n//\n// if (action.type === \"toggle\") {\n//   return {\n//     showCounter: !state.showCounter,\n//     counter: state.counter,\n//   };\n// }\n// return state;\n// };\n\nconst store = configureStore({\n  reducer: { counter: counterSlice.reducer },\n});\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAEtD,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,SAAS;EACfJ,YAAY;EACZK,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDO,SAASA,CAACD,KAAK,EAAE;MACfA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDQ,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACtBH,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,MAAM;IAC/C,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MACnBA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IACxC;EACF;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMW,KAAK,GAAGd,cAAc,CAAC;EAC3Be,OAAO,EAAE;IAAEb,OAAO,EAAEE,YAAY,CAACW;EAAQ;AAC3C,CAAC,CAAC;AAEF,eAAeD,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}